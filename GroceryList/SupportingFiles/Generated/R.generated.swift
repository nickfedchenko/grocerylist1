//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let entitlements = entitlements()

  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 2 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var launchScreen: launchScreen { .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale)) }
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func launchScreen(preferredLanguages: [String]) -> launchScreen {
      .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale))
    }
    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      let source: RswiftResources.StringResource.Source
    }

    /// This `_R.string.localizable` struct is generated, and contains static references to 223 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: / WEEK
      ///
      /// Key: /WEEK
      ///
      /// Locales: en, ru, fr, de
      var weeK: RswiftResources.StringResource { .init(key: "/WEEK", tableName: "Localizable", source: source, developmentValue: "/ WEEK", comment: nil) }

      /// en translation: 3 days free
      ///
      /// Key: 3 days free
      ///
      /// Locales: en, ru, fr, de
      var daysFree: RswiftResources.StringResource { .init(key: "3 days free", tableName: "Localizable", source: source, developmentValue: "3 days free", comment: nil) }

      /// en translation: Add Ingredient
      ///
      /// Key: Add Ingredient
      ///
      /// Locales: en, ru, fr, de
      var addIngredient: RswiftResources.StringResource { .init(key: "Add Ingredient", tableName: "Localizable", source: source, developmentValue: "Add Ingredient", comment: nil) }

      /// en translation: Add Step
      ///
      /// Key: Add Step
      ///
      /// Locales: en, ru, fr, de
      var addStep: RswiftResources.StringResource { .init(key: "Add Step", tableName: "Localizable", source: source, developmentValue: "Add Step", comment: nil) }

      /// en translation: Add recipes to favorites
      ///
      /// Key: Add recipes to favorites
      ///
      /// Locales: en, ru, fr, de
      var addRecipesToFavorites: RswiftResources.StringResource { .init(key: "Add recipes to favorites", tableName: "Localizable", source: source, developmentValue: "Add recipes to favorites", comment: nil) }

      /// en translation: Add to collection
      ///
      /// Key: Add to collection
      ///
      /// Locales: en, ru, fr, de
      var addToCollection: RswiftResources.StringResource { .init(key: "Add to collection", tableName: "Localizable", source: source, developmentValue: "Add to collection", comment: nil) }

      /// en translation: Add Item
      ///
      /// Key: AddItem
      ///
      /// Locales: en, ru, fr, de
      var addItem: RswiftResources.StringResource { .init(key: "AddItem", tableName: "Localizable", source: source, developmentValue: "Add Item", comment: nil) }

      /// en translation: Add note, quantity (optional)
      ///
      /// Key: AddNote
      ///
      /// Locales: en, ru, fr, de
      var addNote: RswiftResources.StringResource { .init(key: "AddNote", tableName: "Localizable", source: source, developmentValue: "Add note, quantity (optional)", comment: nil) }

      /// en translation: Add ingredients from recipes straight to your shopping list
      ///
      /// Key: AddRecipes
      ///
      /// Locales: en, ru, fr, de
      var addRecipes: RswiftResources.StringResource { .init(key: "AddRecipes", tableName: "Localizable", source: source, developmentValue: "Add ingredients from recipes straight to your shopping list", comment: nil) }

      /// en translation: Added earlier
      ///
      /// Key: AddedEarlier
      ///
      /// Locales: en, ru, fr, de
      var addedEarlier: RswiftResources.StringResource { .init(key: "AddedEarlier", tableName: "Localizable", source: source, developmentValue: "Added earlier", comment: nil) }

      /// en translation: Adjust the number of servings and add ingredients to your shopping list
      ///
      /// Key: AdjustNumberOfServings
      ///
      /// Locales: en, ru, fr, de
      var adjustNumberOfServings: RswiftResources.StringResource { .init(key: "AdjustNumberOfServings", tableName: "Localizable", source: source, developmentValue: "Adjust the number of servings and add ingredients to your shopping list", comment: nil) }

      /// en translation: Alcohol
      ///
      /// Key: Alcohol
      ///
      /// Locales: en, ru, fr, de
      var alcohol: RswiftResources.StringResource { .init(key: "Alcohol", tableName: "Localizable", source: source, developmentValue: "Alcohol", comment: nil) }

      /// en translation: Recipes
      ///
      /// Key: AllRecipes
      ///
      /// Locales: en, ru, fr, de
      var allRecipes: RswiftResources.StringResource { .init(key: "AllRecipes", tableName: "Localizable", source: source, developmentValue: "Recipes", comment: nil) }

      /// en translation: Alphabetical sorting
      ///
      /// Key: AlphabeticalSorted
      ///
      /// Locales: en, ru, fr, de
      var alphabeticalSorted: RswiftResources.StringResource { .init(key: "AlphabeticalSorted", tableName: "Localizable", source: source, developmentValue: "Alphabetical sorting", comment: nil) }

      /// en translation: Any store
      ///
      /// Key: Any store
      ///
      /// Locales: en, ru, fr, de
      var anyStore: RswiftResources.StringResource { .init(key: "Any store", tableName: "Localizable", source: source, developmentValue: "Any store", comment: nil) }

      /// en translation: Automatic assignment  of categories to products and grouping
      ///
      /// Key: AutomaticSorting
      ///
      /// Locales: en, ru, fr, de
      var automaticSorting: RswiftResources.StringResource { .init(key: "AutomaticSorting", tableName: "Localizable", source: source, developmentValue: "Automatic assignment \nof categories to products and grouping", comment: nil) }

      /// en translation: Baby
      ///
      /// Key: Baby
      ///
      /// Locales: en, ru, fr, de
      var baby: RswiftResources.StringResource { .init(key: "Baby", tableName: "Localizable", source: source, developmentValue: "Baby", comment: nil) }

      /// en translation:  Back
      ///
      /// Key: Back
      ///
      /// Locales: en, ru, fr, de
      var back: RswiftResources.StringResource { .init(key: "Back", tableName: "Localizable", source: source, developmentValue: " Back", comment: nil) }

      /// en translation: Bread and pastries
      ///
      /// Key: Bread
      ///
      /// Locales: en, ru, fr, de
      var bread: RswiftResources.StringResource { .init(key: "Bread", tableName: "Localizable", source: source, developmentValue: "Bread and pastries", comment: nil) }

      /// en translation: Breakfast
      ///
      /// Key: Breakfast
      ///
      /// Locales: en, ru, fr, de
      var breakfast: RswiftResources.StringResource { .init(key: "Breakfast", tableName: "Localizable", source: source, developmentValue: "Breakfast", comment: nil) }

      /// en translation: Buy
      ///
      /// Key: Buy
      ///
      /// Locales: en, ru, fr, de
      var buy: RswiftResources.StringResource { .init(key: "Buy", tableName: "Localizable", source: source, developmentValue: "Buy", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: Cancel
      ///
      /// Locales: en, ru, fr, de
      var cancel: RswiftResources.StringResource { .init(key: "Cancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Category
      ///
      /// Key: Category
      ///
      /// Locales: en, ru, fr, de
      var category: RswiftResources.StringResource { .init(key: "Category", tableName: "Localizable", source: source, developmentValue: "Category", comment: nil) }

      /// en translation: Choose the right plan for using the Shoppy
      ///
      /// Key: Choose the right plan
      ///
      /// Locales: en, ru, fr, de
      var chooseTheRightPlan: RswiftResources.StringResource { .init(key: "Choose the right plan", tableName: "Localizable", source: source, developmentValue: "Choose the right plan for using the Shoppy", comment: nil) }

      /// en translation: Close
      ///
      /// Key: Close
      ///
      /// Locales: en, ru
      var close: RswiftResources.StringResource { .init(key: "Close", tableName: "Localizable", source: source, developmentValue: "Close", comment: nil) }

      /// en translation: Collection
      ///
      /// Key: Collection
      ///
      /// Locales: en, ru, fr, de
      var collection: RswiftResources.StringResource { .init(key: "Collection", tableName: "Localizable", source: source, developmentValue: "Collection", comment: nil) }

      /// en translation: Collections
      ///
      /// Key: Collections
      ///
      /// Locales: en, ru, fr, de
      var collections: RswiftResources.StringResource { .init(key: "Collections", tableName: "Localizable", source: source, developmentValue: "Collections", comment: nil) }

      /// en translation: Complete
      ///
      /// Key: Complete
      ///
      /// Locales: en, ru, fr, de
      var complete: RswiftResources.StringResource { .init(key: "Complete", tableName: "Localizable", source: source, developmentValue: "Complete", comment: nil) }

      /// en translation: Copy to...
      ///
      /// Key: Copy to...
      ///
      /// Locales: en, ru, fr, de
      var copyTo: RswiftResources.StringResource { .init(key: "Copy to...", tableName: "Localizable", source: source, developmentValue: "Copy to...", comment: nil) }

      /// en translation: Create
      ///
      /// Key: Create
      ///
      /// Locales: en, ru, fr, de
      var create: RswiftResources.StringResource { .init(key: "Create", tableName: "Localizable", source: source, developmentValue: "Create", comment: nil) }

      /// en translation: Create a new store
      ///
      /// Key: Create a new store
      ///
      /// Locales: en, ru, fr, de
      var createANewStore: RswiftResources.StringResource { .init(key: "Create a new store", tableName: "Localizable", source: source, developmentValue: "Create a new store", comment: nil) }

      /// en translation: Create List
      ///
      /// Key: CreateList
      ///
      /// Locales: en, ru, fr, de
      var createList: RswiftResources.StringResource { .init(key: "CreateList", tableName: "Localizable", source: source, developmentValue: "Create List", comment: nil) }

      /// en translation: Create lists with one touch Products are automatically categorized. No more running around the supermarket
      ///
      /// Key: CreateLists
      ///
      /// Locales: en, ru, fr, de
      var createLists: RswiftResources.StringResource { .init(key: "CreateLists", tableName: "Localizable", source: source, developmentValue: "Create lists with one touch Products are automatically categorized. No more running around the supermarket", comment: nil) }

      /// en translation: Sorting by creation date
      ///
      /// Key: DateSorted
      ///
      /// Locales: en, ru, fr, de
      var dateSorted: RswiftResources.StringResource { .init(key: "DateSorted", tableName: "Localizable", source: source, developmentValue: "Sorting by creation date", comment: nil) }

      /// en translation: Description
      ///
      /// Key: Description
      ///
      /// Locales: en, ru, fr, de
      var description: RswiftResources.StringResource { .init(key: "Description", tableName: "Localizable", source: source, developmentValue: "Description", comment: nil) }

      /// en translation: Dinner
      ///
      /// Key: Dinner
      ///
      /// Locales: en, ru, fr, de
      var dinner: RswiftResources.StringResource { .init(key: "Dinner", tableName: "Localizable", source: source, developmentValue: "Dinner", comment: nil) }

      /// en translation: Display cost and store
      ///
      /// Key: Display cost and store
      ///
      /// Locales: en, ru, fr, de
      var displayCostAndStore: RswiftResources.StringResource { .init(key: "Display cost and store", tableName: "Localizable", source: source, developmentValue: "Display cost and store", comment: nil) }

      /// en translation: Do you like the app? Tell us!
      ///
      /// Key: DoYouLikeApp?
      ///
      /// Locales: en, ru, fr, de
      var doYouLikeApp: RswiftResources.StringResource { .init(key: "DoYouLikeApp?", tableName: "Localizable", source: source, developmentValue: "Do you like the app? Tell us!", comment: nil) }

      /// en translation: Done
      ///
      /// Key: Done
      ///
      /// Locales: en, ru, fr, de
      var done: RswiftResources.StringResource { .init(key: "Done", tableName: "Localizable", source: source, developmentValue: "Done", comment: nil) }

      /// en translation: Drinks
      ///
      /// Key: Drinks
      ///
      /// Locales: en, ru, fr, de
      var drinks: RswiftResources.StringResource { .init(key: "Drinks", tableName: "Localizable", source: source, developmentValue: "Drinks", comment: nil) }

      /// en translation: This e-mail is already taken
      ///
      /// Key: EmailTaken
      ///
      /// Locales: en, ru
      var emailTaken: RswiftResources.StringResource { .init(key: "EmailTaken", tableName: "Localizable", source: source, developmentValue: "This e-mail is already taken", comment: nil) }

      /// en translation: Error
      ///
      /// Key: Error
      ///
      /// Locales: en, ru, fr, de
      var error: RswiftResources.StringResource { .init(key: "Error", tableName: "Localizable", source: source, developmentValue: "Error", comment: nil) }

      /// en translation: Favorites
      ///
      /// Key: Favorites
      ///
      /// Locales: en, ru, fr, de
      var favorites: RswiftResources.StringResource { .init(key: "Favorites", tableName: "Localizable", source: source, developmentValue: "Favorites", comment: nil) }

      /// en translation: Fish and seafood
      ///
      /// Key: Fish
      ///
      /// Locales: en, ru, fr, de
      var fish: RswiftResources.StringResource { .init(key: "Fish", tableName: "Localizable", source: source, developmentValue: "Fish and seafood", comment: nil) }

      /// en translation: Frozen foods
      ///
      /// Key: Frozen
      ///
      /// Locales: en, ru, fr, de
      var frozen: RswiftResources.StringResource { .init(key: "Frozen", tableName: "Localizable", source: source, developmentValue: "Frozen foods", comment: nil) }

      /// en translation: Fruits and vegetables
      ///
      /// Key: FruitsAndVegetables
      ///
      /// Locales: en, ru, fr, de
      var fruitsAndVegetables: RswiftResources.StringResource { .init(key: "FruitsAndVegetables", tableName: "Localizable", source: source, developmentValue: "Fruits and vegetables", comment: nil) }

      /// en translation: Grocery
      ///
      /// Key: Grocery
      ///
      /// Locales: en, ru, fr, de
      var grocery: RswiftResources.StringResource { .init(key: "Grocery", tableName: "Localizable", source: source, developmentValue: "Grocery", comment: nil) }

      /// en translation: Grocery List
      ///
      /// Key: Grocery List
      ///
      /// Locales: en, ru, fr, de
      var groceryList: RswiftResources.StringResource { .init(key: "Grocery List", tableName: "Localizable", source: source, developmentValue: "Grocery List", comment: nil) }

      /// en translation: Grocery Lists
      ///
      /// Key: Grocery Lists
      ///
      /// Locales: en, ru, fr, de
      var groceryLists: RswiftResources.StringResource { .init(key: "Grocery Lists", tableName: "Localizable", source: source, developmentValue: "Grocery Lists", comment: nil) }

      /// en translation: Haptic Feedback
      ///
      /// Key: Haptic Feedback
      ///
      /// Locales: en, ru, fr, de
      var hapticFeedback: RswiftResources.StringResource { .init(key: "Haptic Feedback", tableName: "Localizable", source: source, developmentValue: "Haptic Feedback", comment: nil) }

      /// en translation: Health & Beauty
      ///
      /// Key: Health & Beauty
      ///
      /// Locales: en, ru, fr, de
      var healthBeauty: RswiftResources.StringResource { .init(key: "Health & Beauty", tableName: "Localizable", source: source, developmentValue: "Health & Beauty", comment: nil) }

      /// en translation: Healthy eating
      ///
      /// Key: HealtyFood
      ///
      /// Locales: en, ru, fr, de
      var healtyFood: RswiftResources.StringResource { .init(key: "HealtyFood", tableName: "Localizable", source: source, developmentValue: "Healthy eating", comment: nil) }

      /// en translation: Hello! Here is a great app for joint shopping and recipes!
      ///
      /// Key: Hello! Here is a great app
      ///
      /// Locales: en, ru, fr, de
      var helloHereIsAGreatApp: RswiftResources.StringResource { .init(key: "Hello! Here is a great app", tableName: "Localizable", source: source, developmentValue: "Hello! Here is a great app for joint shopping and recipes!", comment: nil) }

      /// en translation: Home, Garden & Patio
      ///
      /// Key: Home, Garden & Patio
      ///
      /// Locales: en, ru, fr, de
      var homeGardenPatio: RswiftResources.StringResource { .init(key: "Home, Garden & Patio", tableName: "Localizable", source: source, developmentValue: "Home, Garden & Patio", comment: nil) }

      /// en translation: Household & Cleaning
      ///
      /// Key: Household & Cleaning
      ///
      /// Locales: en, ru, fr, de
      var householdCleaning: RswiftResources.StringResource { .init(key: "Household & Cleaning", tableName: "Localizable", source: source, developmentValue: "Household & Cleaning", comment: nil) }

      /// en translation: I don’t have an account
      ///
      /// Key: IDontHaveAccount
      ///
      /// Locales: en, ru, fr, de
      var iDontHaveAccount: RswiftResources.StringResource { .init(key: "IDontHaveAccount", tableName: "Localizable", source: source, developmentValue: "I don’t have an account", comment: nil) }

      /// en translation: I have an account
      ///
      /// Key: IHaveAccount
      ///
      /// Locales: en, ru, fr, de
      var iHaveAccount: RswiftResources.StringResource { .init(key: "IHaveAccount", tableName: "Localizable", source: source, developmentValue: "I have an account", comment: nil) }

      /// en translation: U.S. standard
      ///
      /// Key: Imperial
      ///
      /// Locales: en, ru, fr, de
      var imperial: RswiftResources.StringResource { .init(key: "Imperial", tableName: "Localizable", source: source, developmentValue: "U.S. standard", comment: nil) }

      /// en translation: Ingredients
      ///
      /// Key: Ingredients
      ///
      /// Locales: en, ru, fr, de
      var ingredients: RswiftResources.StringResource { .init(key: "Ingredients", tableName: "Localizable", source: source, developmentValue: "Ingredients", comment: nil) }

      /// en translation: Instructions
      ///
      /// Key: Instructions
      ///
      /// Locales: en, ru, fr, de
      var instructions: RswiftResources.StringResource { .init(key: "Instructions", tableName: "Localizable", source: source, developmentValue: "Instructions", comment: nil) }

      /// en translation: Like the app?
      ///
      /// Key: Like the app?
      ///
      /// Locales: en, ru, fr, de
      var likeTheApp: RswiftResources.StringResource { .init(key: "Like the app?", tableName: "Localizable", source: source, developmentValue: "Like the app?", comment: nil) }

      /// en translation: Lists
      ///
      /// Key: Lists
      ///
      /// Locales: en, ru, fr, de
      var lists: RswiftResources.StringResource { .init(key: "Lists", tableName: "Localizable", source: source, developmentValue: "Lists", comment: nil) }

      /// en translation: Loading
      ///
      /// Key: Loading
      ///
      /// Locales: en, ru, fr, de
      var loading: RswiftResources.StringResource { .init(key: "Loading", tableName: "Localizable", source: source, developmentValue: "Loading", comment: nil) }

      /// en translation: Loading
      ///
      /// Key: Loading info
      ///
      /// Locales: en, ru, fr, de
      var loadingInfo: RswiftResources.StringResource { .init(key: "Loading info", tableName: "Localizable", source: source, developmentValue: "Loading", comment: nil) }

      /// en translation: Long press on an Item, returns to editing
      ///
      /// Key: Long press on an Item
      ///
      /// Locales: en, ru, fr, de
      var longPressOnAnItem: RswiftResources.StringResource { .init(key: "Long press on an Item", tableName: "Localizable", source: source, developmentValue: "Long press on an Item, returns to editing", comment: nil) }

      /// en translation: Lunch
      ///
      /// Key: Lunch
      ///
      /// Locales: en, ru, fr, de
      var lunch: RswiftResources.StringResource { .init(key: "Lunch", tableName: "Localizable", source: source, developmentValue: "Lunch", comment: nil) }

      /// en translation: Meat and poultry
      ///
      /// Key: Meat
      ///
      /// Locales: en, ru, fr, de
      var meat: RswiftResources.StringResource { .init(key: "Meat", tableName: "Localizable", source: source, developmentValue: "Meat and poultry", comment: nil) }

      /// en translation: Metric
      ///
      /// Key: Metric
      ///
      /// Locales: en, ru, fr, de
      var metric: RswiftResources.StringResource { .init(key: "Metric", tableName: "Localizable", source: source, developmentValue: "Metric", comment: nil) }

      /// en translation: Dairy products
      ///
      /// Key: Milk
      ///
      /// Locales: en, ru, fr, de
      var milk: RswiftResources.StringResource { .init(key: "Milk", tableName: "Localizable", source: source, developmentValue: "Dairy products", comment: nil) }

      /// en translation: Miscellaneous
      ///
      /// Key: Miscellaneous
      ///
      /// Locales: en, ru, fr, de
      var miscellaneous: RswiftResources.StringResource { .init(key: "Miscellaneous", tableName: "Localizable", source: source, developmentValue: "Miscellaneous", comment: nil) }

      /// en translation: Monthly
      ///
      /// Key: Monthly
      ///
      /// Locales: en, ru, fr, de
      var monthly: RswiftResources.StringResource { .init(key: "Monthly", tableName: "Localizable", source: source, developmentValue: "Monthly", comment: nil) }

      /// en translation: Most Popular
      ///
      /// Key: MostPopular
      ///
      /// Locales: en, ru, fr, de
      var mostPopular: RswiftResources.StringResource { .init(key: "MostPopular", tableName: "Localizable", source: source, developmentValue: "Most Popular", comment: nil) }

      /// en translation: Move to...
      ///
      /// Key: Move to...
      ///
      /// Locales: en, ru, fr, de
      var moveTo: RswiftResources.StringResource { .init(key: "Move to...", tableName: "Localizable", source: source, developmentValue: "Move to...", comment: nil) }

      /// en translation: Name
      ///
      /// Key: Name
      ///
      /// Locales: en, ru, fr, de
      var name: RswiftResources.StringResource { .init(key: "Name", tableName: "Localizable", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: Name of the new list...
      ///
      /// Key: NameOfNewList
      ///
      /// Locales: en, ru, fr, de
      var nameOfNewList: RswiftResources.StringResource { .init(key: "NameOfNewList", tableName: "Localizable", source: source, developmentValue: "Name of the new list...", comment: nil) }

      /// en translation: New Store
      ///
      /// Key: New Store
      ///
      /// Locales: en, ru, fr, de
      var newStore: RswiftResources.StringResource { .init(key: "New Store", tableName: "Localizable", source: source, developmentValue: "New Store", comment: nil) }

      /// en translation: NewCategory
      ///
      /// Key: NewCategory
      ///
      /// Locales: en, ru, fr, de
      var newCategory: RswiftResources.StringResource { .init(key: "NewCategory", tableName: "Localizable", source: source, developmentValue: "NewCategory", comment: nil) }

      /// en translation: NEXT
      ///
      /// Key: Next
      ///
      /// Locales: en, ru, fr, de
      var next: RswiftResources.StringResource { .init(key: "Next", tableName: "Localizable", source: source, developmentValue: "NEXT", comment: nil) }

      /// en translation: No
      ///
      /// Key: No
      ///
      /// Locales: en, ru, fr, de
      var no: RswiftResources.StringResource { .init(key: "No", tableName: "Localizable", source: source, developmentValue: "No", comment: nil) }

      /// en translation: No internet connection
      ///
      /// Key: NoInternet
      ///
      /// Locales: en, ru, fr, de
      var noInternet: RswiftResources.StringResource { .init(key: "NoInternet", tableName: "Localizable", source: source, developmentValue: "No internet connection", comment: nil) }

      /// en translation: Note
      ///
      /// Key: Note
      ///
      /// Locales: en, ru, fr, de
      var note: RswiftResources.StringResource { .init(key: "Note", tableName: "Localizable", source: source, developmentValue: "Note", comment: nil) }

      /// en translation: Optional
      ///
      /// Key: Optional
      ///
      /// Locales: en, ru, fr, de
      var optional: RswiftResources.StringResource { .init(key: "Optional", tableName: "Localizable", source: source, developmentValue: "Optional", comment: nil) }

      /// en translation: Replenished collections of recipes in the app Write down and organize your recipes
      ///
      /// Key: OrganizeRecepts
      ///
      /// Locales: en, ru, fr, de
      var organizeRecepts: RswiftResources.StringResource { .init(key: "OrganizeRecepts", tableName: "Localizable", source: source, developmentValue: "Replenished collections of recipes in the app\nWrite down and organize your recipes", comment: nil) }

      /// en translation: List parameters
      ///
      /// Key: Parametrs
      ///
      /// Locales: en, ru, fr, de
      var parametrs: RswiftResources.StringResource { .init(key: "Parametrs", tableName: "Localizable", source: source, developmentValue: "List parameters", comment: nil) }

      /// en translation: Password reset
      ///
      /// Key: PasswordReset
      ///
      /// Locales: en, ru
      var passwordReset: RswiftResources.StringResource { .init(key: "PasswordReset", tableName: "Localizable", source: source, developmentValue: "Password reset", comment: nil) }

      /// en translation: Pet Care
      ///
      /// Key: Pet Care
      ///
      /// Locales: en, ru, fr, de
      var petCare: RswiftResources.StringResource { .init(key: "Pet Care", tableName: "Localizable", source: source, developmentValue: "Pet Care", comment: nil) }

      /// en translation: Photo
      ///
      /// Key: Photo
      ///
      /// Locales: en, ru, fr, de
      var photo: RswiftResources.StringResource { .init(key: "Photo", tableName: "Localizable", source: source, developmentValue: "Photo", comment: nil) }

      /// en translation: Pick items from another list
      ///
      /// Key: PickFromAnotherList
      ///
      /// Locales: en, ru, fr, de
      var pickFromAnotherList: RswiftResources.StringResource { .init(key: "PickFromAnotherList", tableName: "Localizable", source: source, developmentValue: "Pick items from another list", comment: nil) }

      /// en translation: Pick items from another list
      ///
      /// Key: PickItem
      ///
      /// Locales: en, ru, fr, de
      var pickItem: RswiftResources.StringResource { .init(key: "PickItem", tableName: "Localizable", source: source, developmentValue: "Pick items from another list", comment: nil) }

      /// en translation: Plan your shopping list for the week
      ///
      /// Key: Plan your shopping list for the week
      ///
      /// Locales: en, ru, fr, de
      var planYourShoppingListForTheWeek: RswiftResources.StringResource { .init(key: "Plan your shopping list for the week", tableName: "Localizable", source: source, developmentValue: "Plan your shopping list for the week", comment: nil) }

      /// en translation: Preparation Steps
      ///
      /// Key: Preparation Steps
      ///
      /// Locales: en, ru, fr, de
      var preparationSteps: RswiftResources.StringResource { .init(key: "Preparation Steps", tableName: "Localizable", source: source, developmentValue: "Preparation Steps", comment: nil) }

      /// en translation: Preparation Time (minutes)
      ///
      /// Key: Preparation Time (minutes)
      ///
      /// Locales: en, ru, fr, de
      var preparationTimeMinutes: RswiftResources.StringResource { .init(key: "Preparation Time (minutes)", tableName: "Localizable", source: source, developmentValue: "Preparation Time (minutes)", comment: nil) }

      /// en translation: A problem? Contact us!
      ///
      /// Key: Problems?
      ///
      /// Locales: en, ru, fr, de
      var problems: RswiftResources.StringResource { .init(key: "Problems?", tableName: "Localizable", source: source, developmentValue: "A problem? Contact us!", comment: nil) }

      /// en translation: Purchased
      ///
      /// Key: Purchased
      ///
      /// Locales: en, ru, fr, de
      var purchased: RswiftResources.StringResource { .init(key: "Purchased", tableName: "Localizable", source: source, developmentValue: "Purchased", comment: nil) }

      /// en translation: Purchased Cost: 
      ///
      /// Key: Purchased Cost: 
      ///
      /// Locales: en, ru, fr, de
      var purchasedCost: RswiftResources.StringResource { .init(key: "Purchased Cost: ", tableName: "Localizable", source: source, developmentValue: "Purchased Cost: ", comment: nil) }

      /// en translation: Quantity (optional)
      ///
      /// Key: Quantity
      ///
      /// Locales: en, ru, fr, de
      var quantity: RswiftResources.StringResource { .init(key: "Quantity", tableName: "Localizable", source: source, developmentValue: "Quantity (optional)", comment: nil) }

      /// en translation: Quantity Units
      ///
      /// Key: Quantity Units
      ///
      /// Locales: en, ru, fr, de
      var quantityUnits: RswiftResources.StringResource { .init(key: "Quantity Units", tableName: "Localizable", source: source, developmentValue: "Quantity Units", comment: nil) }

      /// en translation: Quantity
      ///
      /// Key: Quantity1
      ///
      /// Locales: en, ru, fr, de
      var quantity1: RswiftResources.StringResource { .init(key: "Quantity1", tableName: "Localizable", source: source, developmentValue: "Quantity", comment: nil) }

      /// en translation: Quick add recipe ingredients into your lists
      ///
      /// Key: Quick add recipe ingredients into your lists
      ///
      /// Locales: en, ru, fr, de
      var quickAddRecipeIngredientsIntoYourLists: RswiftResources.StringResource { .init(key: "Quick add recipe ingredients into your lists", tableName: "Localizable", source: source, developmentValue: "Quick add recipe ingredients into your lists", comment: nil) }

      /// en translation: REGISTER
      ///
      /// Key: REGISTER
      ///
      /// Locales: en, ru, fr, de
      var registeR: RswiftResources.StringResource { .init(key: "REGISTER", tableName: "Localizable", source: source, developmentValue: "REGISTER", comment: nil) }

      /// en translation: Ready-made food
      ///
      /// Key: ReadyFood
      ///
      /// Locales: en, ru, fr, de
      var readyFood: RswiftResources.StringResource { .init(key: "ReadyFood", tableName: "Localizable", source: source, developmentValue: "Ready-made food", comment: nil) }

      /// en translation: If you entered a correct e-mail address, you will receive password reset e-mail shortly
      ///
      /// Key: RecievePasswordShortly
      ///
      /// Locales: en, ru
      var recievePasswordShortly: RswiftResources.StringResource { .init(key: "RecievePasswordShortly", tableName: "Localizable", source: source, developmentValue: "If you entered a correct e-mail address, you will receive password reset e-mail shortly", comment: nil) }

      /// en translation: Recipe 
      ///
      /// Key: Recipe
      ///
      /// Locales: en, ru, fr, de
      var recipe: RswiftResources.StringResource { .init(key: "Recipe", tableName: "Localizable", source: source, developmentValue: "Recipe ", comment: nil) }

      /// en translation:  Recipes
      ///
      /// Key: Recipes
      ///
      /// Locales: en, ru, fr, de
      var recipes: RswiftResources.StringResource { .init(key: "Recipes", tableName: "Localizable", source: source, developmentValue: " Recipes", comment: nil) }

      /// en translation: Registration is required to  use shared list functions
      ///
      /// Key: RegistrationRequired
      ///
      /// Locales: en, ru, fr, de
      var registrationRequired: RswiftResources.StringResource { .init(key: "RegistrationRequired", tableName: "Localizable", source: source, developmentValue: "Registration is required to \nuse shared list functions", comment: nil) }

      /// en translation: Required
      ///
      /// Key: Required
      ///
      /// Locales: en, ru, fr, de
      var required: RswiftResources.StringResource { .init(key: "Required", tableName: "Localizable", source: source, developmentValue: "Required", comment: nil) }

      /// en translation: Required (minimum 2)
      ///
      /// Key: Required (minimum 2)
      ///
      /// Locales: en, ru, fr, de
      var requiredMinimum2: RswiftResources.StringResource { .init(key: "Required (minimum 2)", tableName: "Localizable", source: source, developmentValue: "Required (minimum 2)", comment: nil) }

      /// en translation: Change password
      ///
      /// Key: ResetPassword.ChangePassword
      ///
      /// Locales: en, ru
      var resetPasswordChangePassword: RswiftResources.StringResource { .init(key: "ResetPassword.ChangePassword", tableName: "Localizable", source: source, developmentValue: "Change password", comment: nil) }

      /// en translation: Enter new password
      ///
      /// Key: ResetPassword.EnterNewPassw
      ///
      /// Locales: en, ru
      var resetPasswordEnterNewPassw: RswiftResources.StringResource { .init(key: "ResetPassword.EnterNewPassw", tableName: "Localizable", source: source, developmentValue: "Enter new password", comment: nil) }

      /// en translation: This link can be used only once and will become inactive in 1 hour.  Please reset again.
      ///
      /// Key: ResetPassword.LinkInactive
      ///
      /// Locales: en, ru
      var resetPasswordLinkInactive: RswiftResources.StringResource { .init(key: "ResetPassword.LinkInactive", tableName: "Localizable", source: source, developmentValue: "This link can be used only once and will become inactive in 1 hour. \nPlease reset again.", comment: nil) }

      /// en translation: Save time and money  with us
      ///
      /// Key: SafeTimeAndMoney
      ///
      /// Locales: en, ru, fr, de
      var safeTimeAndMoney: RswiftResources.StringResource { .init(key: "SafeTimeAndMoney", tableName: "Localizable", source: source, developmentValue: "Save time and money \nwith us", comment: nil) }

      /// en translation: Save
      ///
      /// Key: Save
      ///
      /// Locales: en, ru, fr, de
      var save: RswiftResources.StringResource { .init(key: "Save", tableName: "Localizable", source: source, developmentValue: "Save", comment: nil) }

      /// en translation: Save time and money
      ///
      /// Key: Save time and money
      ///
      /// Locales: en, ru, fr, de
      var saveTimeAndMoney: RswiftResources.StringResource { .init(key: "Save time and money", tableName: "Localizable", source: source, developmentValue: "Save time and money", comment: nil) }

      /// en translation: Search in Category
      ///
      /// Key: SearcInCategory
      ///
      /// Locales: en, ru, fr, de
      var searcInCategory: RswiftResources.StringResource { .init(key: "SearcInCategory", tableName: "Localizable", source: source, developmentValue: "Search in Category", comment: nil) }

      /// en translation: Search in 
      ///
      /// Key: Search in 
      ///
      /// Locales: en, ru, fr, de
      var searchIn: RswiftResources.StringResource { .init(key: "Search in ", tableName: "Localizable", source: source, developmentValue: "Search in ", comment: nil) }

      /// en translation: Search in all recipes
      ///
      /// Key: Search in all recipes
      ///
      /// Locales: en, ru, fr, de
      var searchInAllRecipes: RswiftResources.StringResource { .init(key: "Search in all recipes", tableName: "Localizable", source: source, developmentValue: "Search in all recipes", comment: nil) }

      /// en translation: Select list
      ///
      /// Key: Select list
      ///
      /// Locales: en, ru, fr, de
      var selectList: RswiftResources.StringResource { .init(key: "Select list", tableName: "Localizable", source: source, developmentValue: "Select list", comment: nil) }

      /// en translation: Select сategory
      ///
      /// Key: SelectCategory
      ///
      /// Locales: en, ru, fr, de
      var selectCategory: RswiftResources.StringResource { .init(key: "SelectCategory", tableName: "Localizable", source: source, developmentValue: "Select сategory", comment: nil) }

      /// en translation: Select one or more collections where your recipe will be stored. You can create a new collection.
      ///
      /// Key: SelectOneOrMoreCollections
      ///
      /// Locales: en, ru, fr, de
      var selectOneOrMoreCollections: RswiftResources.StringResource { .init(key: "SelectOneOrMoreCollections", tableName: "Localizable", source: source, developmentValue: "Select one or more collections where your recipe will be stored. You can create a new collection.", comment: nil) }

      /// en translation: Send Invitation
      ///
      /// Key: Send Invitation
      ///
      /// Locales: en, ru, fr, de
      var sendInvitation: RswiftResources.StringResource { .init(key: "Send Invitation", tableName: "Localizable", source: source, developmentValue: "Send Invitation", comment: nil) }

      /// en translation: Send us feedback
      ///
      /// Key: Send us feedback
      ///
      /// Locales: en, ru, fr, de
      var sendUsFeedback: RswiftResources.StringResource { .init(key: "Send us feedback", tableName: "Localizable", source: source, developmentValue: "Send us feedback", comment: nil) }

      /// en translation: Account
      ///
      /// Key: Settings.Account
      ///
      /// Locales: en, ru
      var settingsAccount: RswiftResources.StringResource { .init(key: "Settings.Account", tableName: "Localizable", source: source, developmentValue: "Account", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: Settings.Account.Cancel
      ///
      /// Locales: en, ru
      var settingsAccountCancel: RswiftResources.StringResource { .init(key: "Settings.Account.Cancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: Settings.Account.Delete
      ///
      /// Locales: en, ru
      var settingsAccountDelete: RswiftResources.StringResource { .init(key: "Settings.Account.Delete", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Delete account?
      ///
      /// Key: Settings.Account.DeleteAcc?
      ///
      /// Locales: en, ru
      var settingsAccountDeleteAcc: RswiftResources.StringResource { .init(key: "Settings.Account.DeleteAcc?", tableName: "Localizable", source: source, developmentValue: "Delete account?", comment: nil) }

      /// en translation: Delete Account
      ///
      /// Key: Settings.Account.DeleteAccount
      ///
      /// Locales: en, ru
      var settingsAccountDeleteAccount: RswiftResources.StringResource { .init(key: "Settings.Account.DeleteAccount", tableName: "Localizable", source: source, developmentValue: "Delete Account", comment: nil) }

      /// en translation: Log Out
      ///
      /// Key: Settings.Account.LogOut
      ///
      /// Locales: en, ru
      var settingsAccountLogOut: RswiftResources.StringResource { .init(key: "Settings.Account.LogOut", tableName: "Localizable", source: source, developmentValue: "Log Out", comment: nil) }

      /// en translation: You are about to permanently delete your account along with all data associated to it
      ///
      /// Key: Settings.Account.PremanentDel
      ///
      /// Locales: en, ru
      var settingsAccountPremanentDel: RswiftResources.StringResource { .init(key: "Settings.Account.PremanentDel", tableName: "Localizable", source: source, developmentValue: "You are about to permanently delete your account along with all data associated to it", comment: nil) }

      /// en translation: To use Shared Notes, please login again.
      ///
      /// Key: Settings.Account.ToUseShared
      ///
      /// Locales: en, ru
      var settingsAccountToUseShared: RswiftResources.StringResource { .init(key: "Settings.Account.ToUseShared", tableName: "Localizable", source: source, developmentValue: "To use Shared Notes, please login again.", comment: nil) }

      /// en translation: Add your photo, it will be more beautiful
      ///
      /// Key: Settings.AddPhoto
      ///
      /// Locales: en, ru
      var settingsAddPhoto: RswiftResources.StringResource { .init(key: "Settings.AddPhoto", tableName: "Localizable", source: source, developmentValue: "Add your photo, it will be more beautiful", comment: nil) }

      /// en translation: Grocery List App
      ///
      /// Key: Settings.GroceryListApp
      ///
      /// Locales: en, ru
      var settingsGroceryListApp: RswiftResources.StringResource { .init(key: "Settings.GroceryListApp", tableName: "Localizable", source: source, developmentValue: "Grocery List App", comment: nil) }

      /// en translation: Profile
      ///
      /// Key: Settings.Profile
      ///
      /// Locales: en, ru
      var settingsProfile: RswiftResources.StringResource { .init(key: "Settings.Profile", tableName: "Localizable", source: source, developmentValue: "Profile", comment: nil) }

      /// en translation: Screen Name
      ///
      /// Key: Settings.ScreenName
      ///
      /// Locales: en, ru
      var settingsScreenName: RswiftResources.StringResource { .init(key: "Settings.ScreenName", tableName: "Localizable", source: source, developmentValue: "Screen Name", comment: nil) }

      /// en translation: Share recipes
      ///
      /// Key: Share recipes
      ///
      /// Locales: en, ru, fr, de
      var shareRecipes: RswiftResources.StringResource { .init(key: "Share recipes", tableName: "Localizable", source: source, developmentValue: "Share recipes", comment: nil) }

      /// en translation: Shared
      ///
      /// Key: Shared
      ///
      /// Locales: en, ru, fr, de
      var shared: RswiftResources.StringResource { .init(key: "Shared", tableName: "Localizable", source: source, developmentValue: "Shared", comment: nil) }

      /// en translation: Shared lists can be viewed and updated by multiple people at once.
      ///
      /// Key: Shared lists
      ///
      /// Locales: en, ru, fr, de
      var sharedLists: RswiftResources.StringResource { .init(key: "Shared lists", tableName: "Localizable", source: source, developmentValue: "Shared lists can be viewed and updated by multiple people at once.", comment: nil) }

      /// en translation: Sign in
      ///
      /// Key: Sing In
      ///
      /// Locales: en, ru, fr, de
      var singIn: RswiftResources.StringResource { .init(key: "Sing In", tableName: "Localizable", source: source, developmentValue: "Sign in", comment: nil) }

      /// en translation: Sign up
      ///
      /// Key: Sing Up
      ///
      /// Locales: en, ru, fr, de
      var singUp: RswiftResources.StringResource { .init(key: "Sing Up", tableName: "Localizable", source: source, developmentValue: "Sign up", comment: nil) }

      /// en translation: Snacks
      ///
      /// Key: Snacks
      ///
      /// Locales: en, ru, fr, de
      var snacks: RswiftResources.StringResource { .init(key: "Snacks", tableName: "Localizable", source: source, developmentValue: "Snacks", comment: nil) }

      /// en translation: Sorting
      ///
      /// Key: Sorting
      ///
      /// Locales: en, ru, fr, de
      var sorting: RswiftResources.StringResource { .init(key: "Sorting", tableName: "Localizable", source: source, developmentValue: "Sorting", comment: nil) }

      /// en translation: Stationery
      ///
      /// Key: Stationery
      ///
      /// Locales: en, ru, fr, de
      var stationery: RswiftResources.StringResource { .init(key: "Stationery", tableName: "Localizable", source: source, developmentValue: "Stationery", comment: nil) }

      /// en translation: Step
      ///
      /// Key: Step
      ///
      /// Locales: en, ru, fr, de
      var step: RswiftResources.StringResource { .init(key: "Step", tableName: "Localizable", source: source, developmentValue: "Step", comment: nil) }

      /// en translation: Step 1
      ///
      /// Key: Step 1
      ///
      /// Locales: en, ru, fr, de
      var step1: RswiftResources.StringResource { .init(key: "Step 1", tableName: "Localizable", source: source, developmentValue: "Step 1", comment: nil) }

      /// en translation: Step 1 of 2
      ///
      /// Key: Step 1 of 2
      ///
      /// Locales: en, ru, fr, de
      var step1Of2: RswiftResources.StringResource { .init(key: "Step 1 of 2", tableName: "Localizable", source: source, developmentValue: "Step 1 of 2", comment: nil) }

      /// en translation: Step 2 of 2
      ///
      /// Key: Step 2 of 2
      ///
      /// Locales: en, ru, fr, de
      var step2Of2: RswiftResources.StringResource { .init(key: "Step 2 of 2", tableName: "Localizable", source: source, developmentValue: "Step 2 of 2", comment: nil) }

      /// en translation: Store
      ///
      /// Key: Store
      ///
      /// Locales: en, ru, fr, de
      var store: RswiftResources.StringResource { .init(key: "Store", tableName: "Localizable", source: source, developmentValue: "Store", comment: nil) }

      /// en translation: Supermarket
      ///
      /// Key: Supermarket
      ///
      /// Locales: en, ru, fr, de
      var supermarket: RswiftResources.StringResource { .init(key: "Supermarket", tableName: "Localizable", source: source, developmentValue: "Supermarket", comment: nil) }

      /// en translation: Sweets
      ///
      /// Key: Sweet
      ///
      /// Locales: en, ru, fr, de
      var sweet: RswiftResources.StringResource { .init(key: "Sweet", tableName: "Localizable", source: source, developmentValue: "Sweets", comment: nil) }

      /// en translation: Sync With Family & Friends
      ///
      /// Key: Sync With Family & Friends
      ///
      /// Locales: en, ru, fr, de
      var syncWithFamilyFriends: RswiftResources.StringResource { .init(key: "Sync With Family & Friends", tableName: "Localizable", source: source, developmentValue: "Sync With Family & Friends", comment: nil) }

      /// en translation: Synchronize lists with relatives and friends.
      ///
      /// Key: Synchronize
      ///
      /// Locales: en, ru, fr, de
      var synchronize: RswiftResources.StringResource { .init(key: "Synchronize", tableName: "Localizable", source: source, developmentValue: "Synchronize lists with relatives and friends.", comment: nil) }

      /// en translation: Tea and coffee
      ///
      /// Key: Tea
      ///
      /// Locales: en, ru, fr, de
      var tea: RswiftResources.StringResource { .init(key: "Tea", tableName: "Localizable", source: source, developmentValue: "Tea and coffee", comment: nil) }

      /// en translation: Total Cost: 
      ///
      /// Key: Total Cost: 
      ///
      /// Locales: en, ru, fr, de
      var totalCost: RswiftResources.StringResource { .init(key: "Total Cost: ", tableName: "Localizable", source: source, developmentValue: "Total Cost: ", comment: nil) }

      /// en translation: Are you sure you want to permanently delete these tasks?
      ///
      /// Key: WantDeleteTheseTasks?
      ///
      /// Locales: en, ru, fr, de
      var wantDeleteTheseTasks: RswiftResources.StringResource { .init(key: "WantDeleteTheseTasks?", tableName: "Localizable", source: source, developmentValue: "Are you sure you want to permanently delete these tasks?", comment: nil) }

      /// en translation: Warning
      ///
      /// Key: Warning
      ///
      /// Locales: en, ru, fr, de
      var warning: RswiftResources.StringResource { .init(key: "Warning", tableName: "Localizable", source: source, developmentValue: "Warning", comment: nil) }

      /// en translation: Cuisines of the world
      ///
      /// Key: WorldCitchen
      ///
      /// Locales: en, ru, fr, de
      var worldCitchen: RswiftResources.StringResource { .init(key: "WorldCitchen", tableName: "Localizable", source: source, developmentValue: "Cuisines of the world", comment: nil) }

      /// en translation: Write a review
      ///
      /// Key: Write a review
      ///
      /// Locales: en, ru, fr, de
      var writeAReview: RswiftResources.StringResource { .init(key: "Write a review", tableName: "Localizable", source: source, developmentValue: "Write a review", comment: nil) }

      /// en translation: Yes
      ///
      /// Key: Yes
      ///
      /// Locales: en, ru, fr, de
      var yes: RswiftResources.StringResource { .init(key: "Yes", tableName: "Localizable", source: source, developmentValue: "Yes", comment: nil) }

      /// en translation: You can add photo to the recipe at any time later
      ///
      /// Key: You can add photo
      ///
      /// Locales: en, ru, fr, de
      var youCanAddPhoto: RswiftResources.StringResource { .init(key: "You can add photo", tableName: "Localizable", source: source, developmentValue: "You can add photo to the recipe at any time later", comment: nil) }

      /// en translation: Your opinion matter to us!
      ///
      /// Key: Your opinion matter to us!
      ///
      /// Locales: en, ru, fr, de
      var yourOpinionMatterToUs: RswiftResources.StringResource { .init(key: "Your opinion matter to us!", tableName: "Localizable", source: source, developmentValue: "Your opinion matter to us!", comment: nil) }

      /// en translation: Your e-mail:
      ///
      /// Key: YourEmail
      ///
      /// Locales: en, ru
      var yourEmail: RswiftResources.StringResource { .init(key: "YourEmail", tableName: "Localizable", source: source, developmentValue: "Your e-mail:", comment: nil) }

      /// en translation: bottle
      ///
      /// Key: bottle
      ///
      /// Locales: en, ru, fr, de
      var bottle: RswiftResources.StringResource { .init(key: "bottle", tableName: "Localizable", source: source, developmentValue: "bottle", comment: nil) }

      /// en translation: by taste
      ///
      /// Key: by taste
      ///
      /// Locales: en, ru, fr, de
      var byTaste: RswiftResources.StringResource { .init(key: "by taste", tableName: "Localizable", source: source, developmentValue: "by taste", comment: nil) }

      /// en translation: Alphabetically
      ///
      /// Key: byAlphabet
      ///
      /// Locales: en, ru, fr, de
      var byAlphabet: RswiftResources.StringResource { .init(key: "byAlphabet", tableName: "Localizable", source: source, developmentValue: "Alphabetically", comment: nil) }

      /// en translation: By category
      ///
      /// Key: byCategory
      ///
      /// Locales: en, ru, fr, de
      var byCategory: RswiftResources.StringResource { .init(key: "byCategory", tableName: "Localizable", source: source, developmentValue: "By category", comment: nil) }

      /// en translation: By recipe
      ///
      /// Key: byRecipe
      ///
      /// Locales: en, ru, fr, de
      var byRecipe: RswiftResources.StringResource { .init(key: "byRecipe", tableName: "Localizable", source: source, developmentValue: "By recipe", comment: nil) }

      /// en translation: By store
      ///
      /// Key: byStore
      ///
      /// Locales: en, ru, fr, de
      var byStore: RswiftResources.StringResource { .init(key: "byStore", tableName: "Localizable", source: source, developmentValue: "By store", comment: nil) }

      /// en translation: By time
      ///
      /// Key: byTime
      ///
      /// Locales: en, ru, fr, de
      var byTime: RswiftResources.StringResource { .init(key: "byTime", tableName: "Localizable", source: source, developmentValue: "By time", comment: nil) }

      /// en translation: By Users
      ///
      /// Key: byUsers
      ///
      /// Locales: en, ru, fr, de
      var byUsers: RswiftResources.StringResource { .init(key: "byUsers", tableName: "Localizable", source: source, developmentValue: "By Users", comment: nil) }

      /// en translation: can
      ///
      /// Key: can
      ///
      /// Locales: en, ru, fr, de
      var can: RswiftResources.StringResource { .init(key: "can", tableName: "Localizable", source: source, developmentValue: "can", comment: nil) }

      /// en translation: ChangeColor
      ///
      /// Key: changeColor
      ///
      /// Locales: en, ru, fr, de
      var changeColor: RswiftResources.StringResource { .init(key: "changeColor", tableName: "Localizable", source: source, developmentValue: "ChangeColor", comment: nil) }

      /// en translation: Clear All
      ///
      /// Key: clearAll
      ///
      /// Locales: en, ru, fr, de
      var clearAll: RswiftResources.StringResource { .init(key: "clearAll", tableName: "Localizable", source: source, developmentValue: "Clear All", comment: nil) }

      /// en translation: Save to Photo
      ///
      /// Key: copy
      ///
      /// Locales: en, ru, fr, de
      var copy: RswiftResources.StringResource { .init(key: "copy", tableName: "Localizable", source: source, developmentValue: "Save to Photo", comment: nil) }

      /// en translation: Copy
      ///
      /// Key: copyTabBar
      ///
      /// Locales: en, ru, fr, de
      var copyTabBar: RswiftResources.StringResource { .init(key: "copyTabBar", tableName: "Localizable", source: source, developmentValue: "Copy", comment: nil) }

      /// en translation: cost
      ///
      /// Key: cost
      ///
      /// Locales: en, ru, fr, de
      var cost: RswiftResources.StringResource { .init(key: "cost", tableName: "Localizable", source: source, developmentValue: "cost", comment: nil) }

      /// en translation: Create Collection
      ///
      /// Key: createCollection
      ///
      /// Locales: en, ru, fr, de
      var createCollection: RswiftResources.StringResource { .init(key: "createCollection", tableName: "Localizable", source: source, developmentValue: "Create Collection", comment: nil) }

      /// en translation: Create Recipe
      ///
      /// Key: createRecipe
      ///
      /// Locales: en, ru, fr, de
      var createRecipe: RswiftResources.StringResource { .init(key: "createRecipe", tableName: "Localizable", source: source, developmentValue: "Create Recipe", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: delete
      ///
      /// Locales: en, ru, fr, de
      var delete: RswiftResources.StringResource { .init(key: "delete", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Edit
      ///
      /// Key: edit
      ///
      /// Locales: en, ru, fr, de
      var edit: RswiftResources.StringResource { .init(key: "edit", tableName: "Localizable", source: source, developmentValue: "Edit", comment: nil) }

      /// en translation: E-mail
      ///
      /// Key: email
      ///
      /// Locales: en, ru, fr, de
      var email: RswiftResources.StringResource { .init(key: "email", tableName: "Localizable", source: source, developmentValue: "E-mail", comment: nil) }

      /// en translation: fl oz
      ///
      /// Key: fluidOz
      ///
      /// Locales: en, ru, fr, de
      var fluidOz: RswiftResources.StringResource { .init(key: "fluidOz", tableName: "Localizable", source: source, developmentValue: "fl oz", comment: nil) }

      /// en translation: gal
      ///
      /// Key: gallon
      ///
      /// Locales: en, ru, fr, de
      var gallon: RswiftResources.StringResource { .init(key: "gallon", tableName: "Localizable", source: source, developmentValue: "gal", comment: nil) }

      /// en translation: g
      ///
      /// Key: gram
      ///
      /// Locales: en, ru, fr, de
      var gram: RswiftResources.StringResource { .init(key: "gram", tableName: "Localizable", source: source, developmentValue: "g", comment: nil) }

      /// en translation: Import Web Recipes
      ///
      /// Key: importRecipe
      ///
      /// Locales: en, ru, fr, de
      var importRecipe: RswiftResources.StringResource { .init(key: "importRecipe", tableName: "Localizable", source: source, developmentValue: "Import Web Recipes", comment: nil) }

      /// en translation: %@ item selected
      ///
      /// Key: itemSelected
      ///
      /// Locales: en, ru, fr, de
      var itemSelected: RswiftResources.StringResource1<String> { .init(key: "itemSelected", tableName: "Localizable", source: source, developmentValue: "%@ item selected", comment: nil) }

      /// en translation: kg
      ///
      /// Key: kilogram
      ///
      /// Locales: en, ru, fr, de
      var kilogram: RswiftResources.StringResource { .init(key: "kilogram", tableName: "Localizable", source: source, developmentValue: "kg", comment: nil) }

      /// en translation: lb
      ///
      /// Key: lbс
      ///
      /// Locales: en, ru, fr, de
      var lbс: RswiftResources.StringResource { .init(key: "lbс", tableName: "Localizable", source: source, developmentValue: "lb", comment: nil) }

      /// en translation: L
      ///
      /// Key: liter
      ///
      /// Locales: en, ru, fr, de
      var liter: RswiftResources.StringResource { .init(key: "liter", tableName: "Localizable", source: source, developmentValue: "L", comment: nil) }

      /// en translation: mL
      ///
      /// Key: mililiter
      ///
      /// Locales: en, ru, fr, de
      var mililiter: RswiftResources.StringResource { .init(key: "mililiter", tableName: "Localizable", source: source, developmentValue: "mL", comment: nil) }

      /// en translation: min
      ///
      /// Key: min
      ///
      /// Locales: en, ru, fr, de
      var min: RswiftResources.StringResource { .init(key: "min", tableName: "Localizable", source: source, developmentValue: "min", comment: nil) }

      /// en translation: Move
      ///
      /// Key: move
      ///
      /// Locales: en, ru, fr, de
      var move: RswiftResources.StringResource { .init(key: "move", tableName: "Localizable", source: source, developmentValue: "Move", comment: nil) }

      /// en translation: Ok
      ///
      /// Key: ok
      ///
      /// Locales: en, ru
      var ok: RswiftResources.StringResource { .init(key: "ok", tableName: "Localizable", source: source, developmentValue: "Ok", comment: nil) }

      /// en translation: Or login with
      ///
      /// Key: orLog
      ///
      /// Locales: en, ru
      var orLog: RswiftResources.StringResource { .init(key: "orLog", tableName: "Localizable", source: source, developmentValue: "Or login with", comment: nil) }

      /// en translation: Other
      ///
      /// Key: other
      ///
      /// Locales: en, ru, fr, de
      var other: RswiftResources.StringResource { .init(key: "other", tableName: "Localizable", source: source, developmentValue: "Other", comment: nil) }

      /// en translation: oz
      ///
      /// Key: ozz
      ///
      /// Locales: en, ru, fr, de
      var ozz: RswiftResources.StringResource { .init(key: "ozz", tableName: "Localizable", source: source, developmentValue: "oz", comment: nil) }

      /// en translation: pack
      ///
      /// Key: pack
      ///
      /// Locales: en, ru, fr, de
      var pack: RswiftResources.StringResource { .init(key: "pack", tableName: "Localizable", source: source, developmentValue: "pack", comment: nil) }

      /// en translation: Password
      ///
      /// Key: password
      ///
      /// Locales: en, ru, fr, de
      var password: RswiftResources.StringResource { .init(key: "password", tableName: "Localizable", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: Picture matching
      ///
      /// Key: pictureMatching
      ///
      /// Locales: en, ru, fr, de
      var pictureMatching: RswiftResources.StringResource { .init(key: "pictureMatching", tableName: "Localizable", source: source, developmentValue: "Picture matching", comment: nil) }

      /// en translation: pc
      ///
      /// Key: piece
      ///
      /// Locales: en, ru, fr, de
      var piece: RswiftResources.StringResource { .init(key: "piece", tableName: "Localizable", source: source, developmentValue: "pc", comment: nil) }

      /// en translation: pieces
      ///
      /// Key: pieces
      ///
      /// Locales: en, ru, fr, de
      var pieces: RswiftResources.StringResource { .init(key: "pieces", tableName: "Localizable", source: source, developmentValue: "pieces", comment: nil) }

      /// en translation: Fix
      ///
      /// Key: pinch
      ///
      /// Locales: en, ru, fr, de
      var pinch: RswiftResources.StringResource { .init(key: "pinch", tableName: "Localizable", source: source, developmentValue: "Fix", comment: nil) }

      /// en translation: Preferencies
      ///
      /// Key: preferencies
      ///
      /// Locales: en, ru, fr, de
      var preferencies: RswiftResources.StringResource { .init(key: "preferencies", tableName: "Localizable", source: source, developmentValue: "Preferencies", comment: nil) }

      /// en translation: Print
      ///
      /// Key: print
      ///
      /// Locales: en, ru, fr, de
      var print: RswiftResources.StringResource { .init(key: "print", tableName: "Localizable", source: source, developmentValue: "Print", comment: nil) }

      /// en translation: pt
      ///
      /// Key: pt
      ///
      /// Locales: en, ru, fr, de
      var pt: RswiftResources.StringResource { .init(key: "pt", tableName: "Localizable", source: source, developmentValue: "pt", comment: nil) }

      /// en translation: qt
      ///
      /// Key: quart
      ///
      /// Locales: en, ru, fr, de
      var quart: RswiftResources.StringResource { .init(key: "quart", tableName: "Localizable", source: source, developmentValue: "qt", comment: nil) }

      /// en translation: Recipe Creation
      ///
      /// Key: recipeCreation
      ///
      /// Locales: en, ru, fr, de
      var recipeCreation: RswiftResources.StringResource { .init(key: "recipeCreation", tableName: "Localizable", source: source, developmentValue: "Recipe Creation", comment: nil) }

      /// en translation: Rename
      ///
      /// Key: rename
      ///
      /// Locales: en, ru, fr, de
      var rename: RswiftResources.StringResource { .init(key: "rename", tableName: "Localizable", source: source, developmentValue: "Rename", comment: nil) }

      /// en translation: Reset password
      ///
      /// Key: resetPassword
      ///
      /// Locales: en, ru, fr, de
      var resetPassword: RswiftResources.StringResource { .init(key: "resetPassword", tableName: "Localizable", source: source, developmentValue: "Reset password", comment: nil) }

      /// en translation: Rate the app in the AppStore
      ///
      /// Key: review.mainTitle
      ///
      /// Locales: en, ru, fr, de
      var reviewMainTitle: RswiftResources.StringResource { .init(key: "review.mainTitle", tableName: "Localizable", source: source, developmentValue: "Rate the app in the AppStore", comment: nil) }

      /// en translation: This helps to make it even better
      ///
      /// Key: review.subtitle
      ///
      /// Locales: en, ru, fr, de
      var reviewSubtitle: RswiftResources.StringResource { .init(key: "review.subtitle", tableName: "Localizable", source: source, developmentValue: "This helps to make it even better", comment: nil) }

      /// en translation: Select All
      ///
      /// Key: selectAll
      ///
      /// Locales: en, ru, fr, de
      var selectAll: RswiftResources.StringResource { .init(key: "selectAll", tableName: "Localizable", source: source, developmentValue: "Select All", comment: nil) }

      /// en translation: Select All
      ///
      /// Key: selectAllTabBar
      ///
      /// Locales: en, ru, fr, de
      var selectAllTabBar: RswiftResources.StringResource { .init(key: "selectAllTabBar", tableName: "Localizable", source: source, developmentValue: "Select All", comment: nil) }

      /// en translation: Send
      ///
      /// Key: send
      ///
      /// Locales: en, ru, fr, de
      var send: RswiftResources.StringResource { .init(key: "send", tableName: "Localizable", source: source, developmentValue: "Send", comment: nil) }

      /// en translation: servings
      ///
      /// Key: servings
      ///
      /// Locales: en, ru, fr, de
      var servings: RswiftResources.StringResource { .init(key: "servings", tableName: "Localizable", source: source, developmentValue: "servings", comment: nil) }

      /// en translation: serving
      ///
      /// Key: servings-1
      ///
      /// Locales: en, ru, fr, de
      var servings1: RswiftResources.StringResource { .init(key: "servings-1", tableName: "Localizable", source: source, developmentValue: "serving", comment: nil) }

      /// en translation: servings
      ///
      /// Key: servings-2-4
      ///
      /// Locales: en, ru, fr, de
      var servings24: RswiftResources.StringResource { .init(key: "servings-2-4", tableName: "Localizable", source: source, developmentValue: "servings", comment: nil) }

      /// en translation: servings
      ///
      /// Key: servings>4
      ///
      /// Locales: en, ru, fr, de
      var servings4: RswiftResources.StringResource { .init(key: "servings>4", tableName: "Localizable", source: source, developmentValue: "servings", comment: nil) }

      /// en translation: Sign in with Apple
      ///
      /// Key: signInWithApple
      ///
      /// Locales: en, ru, fr, de
      var signInWithApple: RswiftResources.StringResource { .init(key: "signInWithApple", tableName: "Localizable", source: source, developmentValue: "Sign in with Apple", comment: nil) }

      /// en translation: I accept the terms and conditions   I have read the Privacy Policy and acknowledge my rights as a user
      ///
      /// Key: signUpTerms
      ///
      /// Locales: en, ru, fr, de
      var signUpTerms: RswiftResources.StringResource { .init(key: "signUpTerms", tableName: "Localizable", source: source, developmentValue: "I accept the terms and conditions \n\nI have read the Privacy Policy and acknowledge my rights as a user", comment: nil) }

      /// en translation: Sort
      ///
      /// Key: sort
      ///
      /// Locales: en, ru, fr, de
      var sort: RswiftResources.StringResource { .init(key: "sort", tableName: "Localizable", source: source, developmentValue: "Sort", comment: nil) }

      /// en translation: Today
      ///
      /// Key: today
      ///
      /// Locales: en, ru, fr, de
      var today: RswiftResources.StringResource { .init(key: "today", tableName: "Localizable", source: source, developmentValue: "Today", comment: nil) }

      /// en translation: units
      ///
      /// Key: units
      ///
      /// Locales: en, ru, fr, de
      var units: RswiftResources.StringResource { .init(key: "units", tableName: "Localizable", source: source, developmentValue: "units", comment: nil) }

      /// en translation: week
      ///
      /// Key: weekly
      ///
      /// Locales: en, ru, fr, de
      var weekly: RswiftResources.StringResource { .init(key: "weekly", tableName: "Localizable", source: source, developmentValue: "week", comment: nil) }

      /// en translation: Yearly
      ///
      /// Key: yearly
      ///
      /// Locales: en, ru, fr, de
      var yearly: RswiftResources.StringResource { .init(key: "yearly", tableName: "Localizable", source: source, developmentValue: "Yearly", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 11 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `DarkGray`.
    var darkGray: RswiftResources.ColorResource { .init(name: "DarkGray", path: [], bundle: bundle) }

    /// Color `LightGray`.
    var lightGray: RswiftResources.ColorResource { .init(name: "LightGray", path: [], bundle: bundle) }

    /// Color `PrimaryDark`.
    var primaryDark: RswiftResources.ColorResource { .init(name: "PrimaryDark", path: [], bundle: bundle) }

    /// Color `action`.
    var action: RswiftResources.ColorResource { .init(name: "action", path: [], bundle: bundle) }

    /// Color `attention`.
    var attention: RswiftResources.ColorResource { .init(name: "attention", path: [], bundle: bundle) }

    /// Color `background`.
    var background: RswiftResources.ColorResource { .init(name: "background", path: [], bundle: bundle) }

    /// Color `black`.
    var black: RswiftResources.ColorResource { .init(name: "black", path: [], bundle: bundle) }

    /// Color `edit`.
    var edit: RswiftResources.ColorResource { .init(name: "edit", path: [], bundle: bundle) }

    /// Color `mediumGray`.
    var mediumGray: RswiftResources.ColorResource { .init(name: "mediumGray", path: [], bundle: bundle) }

    /// Color `primaryLight`.
    var primaryLight: RswiftResources.ColorResource { .init(name: "primaryLight", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 163 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `#addImage`.
    var addImage: RswiftResources.ImageResource { .init(name: "#addImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#arrowLeft`.
    var arrowLeft: RswiftResources.ImageResource { .init(name: "#arrowLeft", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#arrowRigth`.
    var arrowRigth: RswiftResources.ImageResource { .init(name: "#arrowRigth", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#checkmark`.
    var checkmark: RswiftResources.ImageResource { .init(name: "#checkmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#hand`.
    var hand: RswiftResources.ImageResource { .init(name: "#hand", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#play`.
    var play: RswiftResources.ImageResource { .init(name: "#play", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#plusImage`.
    var plusImage: RswiftResources.ImageResource { .init(name: "#plusImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#reciept`.
    var reciept: RswiftResources.ImageResource { .init(name: "#reciept", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#trash`.
    var trash: RswiftResources.ImageResource { .init(name: "#trash", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `#whiteCross`.
    var whiteCross: RswiftResources.ImageResource { .init(name: "#whiteCross", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ABC`.
    var abC: RswiftResources.ImageResource { .init(name: "ABC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AppleImage`.
    var appleImage: RswiftResources.ImageResource { .init(name: "AppleImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Bank Card`.
    var bankCard: RswiftResources.ImageResource { .init(name: "Bank Card", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Category`.
    var category: RswiftResources.ImageResource { .init(name: "Category", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ChevronDownGreen`.
    var chevronDownGreen: RswiftResources.ImageResource { .init(name: "ChevronDownGreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ChevronUpGreen`.
    var chevronUpGreen: RswiftResources.ImageResource { .init(name: "ChevronUpGreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Collection`.
    var collection: RswiftResources.ImageResource { .init(name: "Collection", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Color`.
    var color: RswiftResources.ImageResource { .init(name: "Color", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ContextMenuPlus`.
    var contextMenuPlus: RswiftResources.ImageResource { .init(name: "ContextMenuPlus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Copy`.
    var copy: RswiftResources.ImageResource { .init(name: "Copy", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Copy_TabBar`.
    var copy_TabBar: RswiftResources.ImageResource { .init(name: "Copy_TabBar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DeleteCollection`.
    var deleteCollection: RswiftResources.ImageResource { .init(name: "DeleteCollection", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DeselectAll_TabBar`.
    var deselectAll_TabBar: RswiftResources.ImageResource { .init(name: "DeselectAll_TabBar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FolderIcon`.
    var folderIcon: RswiftResources.ImageResource { .init(name: "FolderIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Marker`.
    var marker: RswiftResources.ImageResource { .init(name: "Marker", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MenuFolder`.
    var menuFolder: RswiftResources.ImageResource { .init(name: "MenuFolder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Move_TabBar`.
    var move_TabBar: RswiftResources.ImageResource { .init(name: "Move_TabBar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Pin`.
    var pin: RswiftResources.ImageResource { .init(name: "Pin", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Print`.
    var print: RswiftResources.ImageResource { .init(name: "Print", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rearrange`.
    var rearrange: RswiftResources.ImageResource { .init(name: "Rearrange", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Recipe`.
    var recipe: RswiftResources.ImageResource { .init(name: "Recipe", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RecipePlus`.
    var recipePlus: RswiftResources.ImageResource { .init(name: "RecipePlus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rename`.
    var rename: RswiftResources.ImageResource { .init(name: "Rename", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ReviewProducts`.
    var reviewProducts: RswiftResources.ImageResource { .init(name: "ReviewProducts", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SelectAll_TabBar`.
    var selectAll_TabBar: RswiftResources.ImageResource { .init(name: "SelectAll_TabBar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Send`.
    var send: RswiftResources.ImageResource { .init(name: "Send", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SettingsAddPhotoSticker`.
    var settingsAddPhotoSticker: RswiftResources.ImageResource { .init(name: "SettingsAddPhotoSticker", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SettingsEmptyAvatar`.
    var settingsEmptyAvatar: RswiftResources.ImageResource { .init(name: "SettingsEmptyAvatar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Shops`.
    var shops: RswiftResources.ImageResource { .init(name: "Shops", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SignUpAcceptChackmark`.
    var signUpAcceptChackmark: RswiftResources.ImageResource { .init(name: "SignUpAcceptChackmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SignUpEmptyCheckMark`.
    var signUpEmptyCheckMark: RswiftResources.ImageResource { .init(name: "SignUpEmptyCheckMark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Sort`.
    var sort: RswiftResources.ImageResource { .init(name: "Sort", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Sort Filter`.
    var sortFilter: RswiftResources.ImageResource { .init(name: "Sort Filter", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SortRecipeMenu`.
    var sortRecipeMenu: RswiftResources.ImageResource { .init(name: "SortRecipeMenu", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Time`.
    var time: RswiftResources.ImageResource { .init(name: "Time", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Trash_TabBar`.
    var trash_TabBar: RswiftResources.ImageResource { .init(name: "Trash_TabBar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Trash_red`.
    var trash_red: RswiftResources.ImageResource { .init(name: "Trash_red", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ViewUnderRegisterButton`.
    var viewUnderRegisterButton: RswiftResources.ImageResource { .init(name: "ViewUnderRegisterButton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Web`.
    var web: RswiftResources.ImageResource { .init(name: "Web", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `X-markInput`.
    var xMarkInput: RswiftResources.ImageResource { .init(name: "X-markInput", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `addItemImage`.
    var addItemImage: RswiftResources.ImageResource { .init(name: "addItemImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `addToCart`.
    var addToCart: RswiftResources.ImageResource { .init(name: "addToCart", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `addToCartFilled`.
    var addToCartFilled: RswiftResources.ImageResource { .init(name: "addToCartFilled", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `addToFavSelected`.
    var addToFavSelected: RswiftResources.ImageResource { .init(name: "addToFavSelected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `addToFavUnselected`.
    var addToFavUnselected: RswiftResources.ImageResource { .init(name: "addToFavUnselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `basket`.
    var basket: RswiftResources.ImageResource { .init(name: "basket", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `black_Minus`.
    var black_Minus: RswiftResources.ImageResource { .init(name: "black_Minus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `black_Plus`.
    var black_Plus: RswiftResources.ImageResource { .init(name: "black_Plus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `btn_next`.
    var btn_next: RswiftResources.ImageResource { .init(name: "btn_next", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `byUsers`.
    var byUsers: RswiftResources.ImageResource { .init(name: "byUsers", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `camera`.
    var camera: RswiftResources.ImageResource { .init(name: "camera", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `carrot_image`.
    var carrot_image: RswiftResources.ImageResource { .init(name: "carrot_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cart`.
    var cart: RswiftResources.ImageResource { .init(name: "cart", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cellCheckmark`.
    var cellCheckmark: RswiftResources.ImageResource { .init(name: "cellCheckmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevronDown`.
    var chevronDown: RswiftResources.ImageResource { .init(name: "chevronDown", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevronRight`.
    var chevronRight: RswiftResources.ImageResource { .init(name: "chevronRight", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `closeButtonCross`.
    var closeButtonCross: RswiftResources.ImageResource { .init(name: "closeButtonCross", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `close_cross`.
    var close_cross: RswiftResources.ImageResource { .init(name: "close_cross", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `collectionChevron`.
    var collectionChevron: RswiftResources.ImageResource { .init(name: "collectionChevron", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `collectionsAlarmImage`.
    var collectionsAlarmImage: RswiftResources.ImageResource { .init(name: "collectionsAlarmImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `contextMenu`.
    var contextMenu: RswiftResources.ImageResource { .init(name: "contextMenu", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `contextualMenu`.
    var contextualMenu: RswiftResources.ImageResource { .init(name: "contextualMenu", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `editCell`.
    var editCell: RswiftResources.ImageResource { .init(name: "editCell", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `emptyCheckmark`.
    var emptyCheckmark: RswiftResources.ImageResource { .init(name: "emptyCheckmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fifthBG`.
    var fifthBG: RswiftResources.ImageResource { .init(name: "fifthBG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fifthBGBlur`.
    var fifthBGBlur: RswiftResources.ImageResource { .init(name: "fifthBGBlur", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fifthSideView`.
    var fifthSideView: RswiftResources.ImageResource { .init(name: "fifthSideView", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `firstBG`.
    var firstBG: RswiftResources.ImageResource { .init(name: "firstBG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `firstBackgroundBlur`.
    var firstBackgroundBlur: RswiftResources.ImageResource { .init(name: "firstBackgroundBlur", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `firstScreen`.
    var firstScreen: RswiftResources.ImageResource { .init(name: "firstScreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `firstSideView`.
    var firstSideView: RswiftResources.ImageResource { .init(name: "firstSideView", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `foodImage`.
    var foodImage: RswiftResources.ImageResource { .init(name: "foodImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `forthBG`.
    var forthBG: RswiftResources.ImageResource { .init(name: "forthBG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `forthBGBlur`.
    var forthBGBlur: RswiftResources.ImageResource { .init(name: "forthBGBlur", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `forthScreen`.
    var forthScreen: RswiftResources.ImageResource { .init(name: "forthScreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `forthSideView`.
    var forthSideView: RswiftResources.ImageResource { .init(name: "forthSideView", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `gallery`.
    var gallery: RswiftResources.ImageResource { .init(name: "gallery", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `grayPinch`.
    var grayPinch: RswiftResources.ImageResource { .init(name: "grayPinch", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `greenArrowBack`.
    var greenArrowBack: RswiftResources.ImageResource { .init(name: "greenArrowBack", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `greenCart`.
    var greenCart: RswiftResources.ImageResource { .init(name: "greenCart", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `greenCheckmark`.
    var greenCheckmark: RswiftResources.ImageResource { .init(name: "greenCheckmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `greenCross`.
    var greenCross: RswiftResources.ImageResource { .init(name: "greenCross", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `greenLoopImage`.
    var greenLoopImage: RswiftResources.ImageResource { .init(name: "greenLoopImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `greenPinchImage`.
    var greenPinchImage: RswiftResources.ImageResource { .init(name: "greenPinchImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `greenPlus`.
    var greenPlus: RswiftResources.ImageResource { .init(name: "greenPlus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `halfFood`.
    var halfFood: RswiftResources.ImageResource { .init(name: "halfFood", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `hand_white`.
    var hand_white: RswiftResources.ImageResource { .init(name: "hand_white", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logo`.
    var logo: RswiftResources.ImageResource { .init(name: "logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logoShoppy`.
    var logoShoppy: RswiftResources.ImageResource { .init(name: "logoShoppy", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `minusActive`.
    var minusActive: RswiftResources.ImageResource { .init(name: "minusActive", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `minusButton`.
    var minusButton: RswiftResources.ImageResource { .init(name: "minusButton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `minusInactive`.
    var minusInactive: RswiftResources.ImageResource { .init(name: "minusInactive", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `newStore`.
    var newStore: RswiftResources.ImageResource { .init(name: "newStore", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `new_createList`.
    var new_createList: RswiftResources.ImageResource { .init(name: "new_createList", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `nextArrow`.
    var nextArrow: RswiftResources.ImageResource { .init(name: "nextArrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `orangeCircle`.
    var orangeCircle: RswiftResources.ImageResource { .init(name: "orangeCircle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `paywallBackground`.
    var paywallBackground: RswiftResources.ImageResource { .init(name: "paywallBackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `paywallCheckmark`.
    var paywallCheckmark: RswiftResources.ImageResource { .init(name: "paywallCheckmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `paywallDot`.
    var paywallDot: RswiftResources.ImageResource { .init(name: "paywallDot", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `phoneShadow`.
    var phoneShadow: RswiftResources.ImageResource { .init(name: "phoneShadow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pickImage`.
    var pickImage: RswiftResources.ImageResource { .init(name: "pickImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pinchImage`.
    var pinchImage: RswiftResources.ImageResource { .init(name: "pinchImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `plusActive`.
    var plusActive: RswiftResources.ImageResource { .init(name: "plusActive", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `plusButton`.
    var plusButton: RswiftResources.ImageResource { .init(name: "plusButton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `plusInactive`.
    var plusInactive: RswiftResources.ImageResource { .init(name: "plusInactive", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `productShelf`.
    var productShelf: RswiftResources.ImageResource { .init(name: "productShelf", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `product_empty_checkmark`.
    var product_empty_checkmark: RswiftResources.ImageResource { .init(name: "product_empty_checkmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profileImage`.
    var profileImage: RswiftResources.ImageResource { .init(name: "profileImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_add`.
    var profile_add: RswiftResources.ImageResource { .init(name: "profile_add", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_icon`.
    var profile_icon: RswiftResources.ImageResource { .init(name: "profile_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_intited`.
    var profile_intited: RswiftResources.ImageResource { .init(name: "profile_intited", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_noreg`.
    var profile_noreg: RswiftResources.ImageResource { .init(name: "profile_noreg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `promptingFavorites`.
    var promptingFavorites: RswiftResources.ImageResource { .init(name: "promptingFavorites", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `promptingServings`.
    var promptingServings: RswiftResources.ImageResource { .init(name: "promptingServings", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `promptingShare`.
    var promptingShare: RswiftResources.ImageResource { .init(name: "promptingShare", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `purchasedCheckmark`.
    var purchasedCheckmark: RswiftResources.ImageResource { .init(name: "purchasedCheckmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `redDeleteImage`.
    var redDeleteImage: RswiftResources.ImageResource { .init(name: "redDeleteImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `removeImage`.
    var removeImage: RswiftResources.ImageResource { .init(name: "removeImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `reviewBackground`.
    var reviewBackground: RswiftResources.ImageResource { .init(name: "reviewBackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `reviewStars`.
    var reviewStars: RswiftResources.ImageResource { .init(name: "reviewStars", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `review_1`.
    var review_1: RswiftResources.ImageResource { .init(name: "review_1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `review_2`.
    var review_2: RswiftResources.ImageResource { .init(name: "review_2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `review_3`.
    var review_3: RswiftResources.ImageResource { .init(name: "review_3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `rightChevronGreen`.
    var rightChevronGreen: RswiftResources.ImageResource { .init(name: "rightChevronGreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `searchButtonImage`.
    var searchButtonImage: RswiftResources.ImageResource { .init(name: "searchButtonImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `secondBG`.
    var secondBG: RswiftResources.ImageResource { .init(name: "secondBG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `secondBGBlur`.
    var secondBGBlur: RswiftResources.ImageResource { .init(name: "secondBGBlur", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `secondScreen`.
    var secondScreen: RswiftResources.ImageResource { .init(name: "secondScreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `secondSideView`.
    var secondSideView: RswiftResources.ImageResource { .init(name: "secondSideView", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `settingsButtonImage`.
    var settingsButtonImage: RswiftResources.ImageResource { .init(name: "settingsButtonImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `shareAvatar`.
    var shareAvatar: RswiftResources.ImageResource { .init(name: "shareAvatar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `shareIcon`.
    var shareIcon: RswiftResources.ImageResource { .init(name: "shareIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `share_button`.
    var share_button: RswiftResources.ImageResource { .init(name: "share_button", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `share_checkmark`.
    var share_checkmark: RswiftResources.ImageResource { .init(name: "share_checkmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sharedAlarmImage`.
    var sharedAlarmImage: RswiftResources.ImageResource { .init(name: "sharedAlarmImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sharingList`.
    var sharingList: RswiftResources.ImageResource { .init(name: "sharingList", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sharing_plus`.
    var sharing_plus: RswiftResources.ImageResource { .init(name: "sharing_plus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sheckmarkForSorting`.
    var sheckmarkForSorting: RswiftResources.ImageResource { .init(name: "sheckmarkForSorting", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `sortRecipe`.
    var sortRecipe: RswiftResources.ImageResource { .init(name: "sortRecipe", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `swipeTeDeleteFromFavorite`.
    var swipeTeDeleteFromFavorite: RswiftResources.ImageResource { .init(name: "swipeTeDeleteFromFavorite", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `swipeToAddToFavorite`.
    var swipeToAddToFavorite: RswiftResources.ImageResource { .init(name: "swipeToAddToFavorite", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `swipeToDelete`.
    var swipeToDelete: RswiftResources.ImageResource { .init(name: "swipeToDelete", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `thirdBG`.
    var thirdBG: RswiftResources.ImageResource { .init(name: "thirdBG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `thirdBGBlur`.
    var thirdBGBlur: RswiftResources.ImageResource { .init(name: "thirdBGBlur", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `thirdScreen`.
    var thirdScreen: RswiftResources.ImageResource { .init(name: "thirdScreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `thirdSideView`.
    var thirdSideView: RswiftResources.ImageResource { .init(name: "thirdSideView", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `timerIcon`.
    var timerIcon: RswiftResources.ImageResource { .init(name: "timerIcon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `trash_can`.
    var trash_can: RswiftResources.ImageResource { .init(name: "trash_can", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `vectorArrow`.
    var vectorArrow: RswiftResources.ImageResource { .init(name: "vectorArrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `whiteArrowRight`.
    var whiteArrowRight: RswiftResources.ImageResource { .init(name: "whiteArrowRight", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `whiteCheckmark`.
    var whiteCheckmark: RswiftResources.ImageResource { .init(name: "whiteCheckmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `whitePencil`.
    var whitePencil: RswiftResources.ImageResource { .init(name: "whitePencil", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `whitePlusImage`.
    var whitePlusImage: RswiftResources.ImageResource { .init(name: "whitePlusImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.entitlements` struct is generated, and contains static references to 1 properties.
  struct entitlements {
    let apsEnvironment: String = "development"
    let comAppleDeveloperApplesignin = comAppleDeveloperApplesignin()
    struct comAppleDeveloperApplesignin {
      let `default`: String = "Default"
    }
  }

  /// This `_R.font` struct is generated, and contains static references to 18 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `SFCompactDisplay-Medium`.
    var sfCompactDisplayMedium: RswiftResources.FontResource { .init(name: "SFCompactDisplay-Medium", bundle: bundle, filename: "SF-Compact-Display-Medium.otf") }

    /// Font `SFCompactDisplay-Semibold`.
    var sfCompactDisplaySemibold: RswiftResources.FontResource { .init(name: "SFCompactDisplay-Semibold", bundle: bundle, filename: "SF-Compact-Display-Semibold.otf") }

    /// Font `SFProDisplay-Bold`.
    var sfProDisplayBold: RswiftResources.FontResource { .init(name: "SFProDisplay-Bold", bundle: bundle, filename: "SF Pro Display Bold.otf") }

    /// Font `SFProDisplay-Heavy`.
    var sfProDisplayHeavy: RswiftResources.FontResource { .init(name: "SFProDisplay-Heavy", bundle: bundle, filename: "SF Pro Display Heavy.otf") }

    /// Font `SFProDisplay-Medium`.
    var sfProDisplayMedium: RswiftResources.FontResource { .init(name: "SFProDisplay-Medium", bundle: bundle, filename: "SF Pro Display Medium.otf") }

    /// Font `SFProDisplay-Regular`.
    var sfProDisplayRegular: RswiftResources.FontResource { .init(name: "SFProDisplay-Regular", bundle: bundle, filename: "SF Pro Display Regular.otf") }

    /// Font `SFProDisplay-Semibold`.
    var sfProDisplaySemibold: RswiftResources.FontResource { .init(name: "SFProDisplay-Semibold", bundle: bundle, filename: "SF Pro Display Semibold.otf") }

    /// Font `SFProRounded-Bold`.
    var sfProRoundedBold: RswiftResources.FontResource { .init(name: "SFProRounded-Bold", bundle: bundle, filename: "SF Pro Rounded Bold.otf") }

    /// Font `SFProRounded-Heavy`.
    var sfProRoundedHeavy: RswiftResources.FontResource { .init(name: "SFProRounded-Heavy", bundle: bundle, filename: "SF Pro Rounded Heavy.otf") }

    /// Font `SFProRounded-Medium`.
    var sfProRoundedMedium: RswiftResources.FontResource { .init(name: "SFProRounded-Medium", bundle: bundle, filename: "SF Pro Rounded Medium.otf") }

    /// Font `SFProRounded-Regular`.
    var sfProRoundedRegular: RswiftResources.FontResource { .init(name: "SFProRounded-Regular", bundle: bundle, filename: "SF Pro Rounded Regular.otf") }

    /// Font `SFProRounded-Semibold`.
    var sfProRoundedSemibold: RswiftResources.FontResource { .init(name: "SFProRounded-Semibold", bundle: bundle, filename: "SF Pro Rounded Semibold.otf") }

    /// Font `SFProText-Black`.
    var sfProTextBlack: RswiftResources.FontResource { .init(name: "SFProText-Black", bundle: bundle, filename: "SF Pro Text Black.otf") }

    /// Font `SFProText-Bold`.
    var sfProTextBold: RswiftResources.FontResource { .init(name: "SFProText-Bold", bundle: bundle, filename: "SF Pro Text Bold.otf") }

    /// Font `SFProText-Heavy`.
    var sfProTextHeavy: RswiftResources.FontResource { .init(name: "SFProText-Heavy", bundle: bundle, filename: "SF Pro Text Heavy.otf") }

    /// Font `SFProText-Medium`.
    var sfProTextMedium: RswiftResources.FontResource { .init(name: "SFProText-Medium", bundle: bundle, filename: "SF Pro Text Medium.otf") }

    /// Font `SFProText-Regular`.
    var sfProTextRegular: RswiftResources.FontResource { .init(name: "SFProText-Regular", bundle: bundle, filename: "SF Pro Text Regular.otf") }

    /// Font `SFProText-Semibold`.
    var sfProTextSemibold: RswiftResources.FontResource { .init(name: "SFProText-Semibold", bundle: bundle, filename: "SF Pro Text Semibold.otf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [sfCompactDisplayMedium, sfCompactDisplaySemibold, sfProDisplayBold, sfProDisplayHeavy, sfProDisplayMedium, sfProDisplayRegular, sfProDisplaySemibold, sfProRoundedBold, sfProRoundedHeavy, sfProRoundedMedium, sfProRoundedRegular, sfProRoundedSemibold, sfProTextBlack, sfProTextBold, sfProTextHeavy, sfProTextMedium, sfProTextRegular, sfProTextSemibold].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 19 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `GoogleService-Info.plist`.
    var googleServiceInfoPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Display Bold.otf`.
    var sfProDisplayBoldOtf: RswiftResources.FileResource { .init(name: "SF Pro Display Bold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Display Heavy.otf`.
    var sfProDisplayHeavyOtf: RswiftResources.FileResource { .init(name: "SF Pro Display Heavy", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Display Medium.otf`.
    var sfProDisplayMediumOtf: RswiftResources.FileResource { .init(name: "SF Pro Display Medium", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Display Regular.otf`.
    var sfProDisplayRegularOtf: RswiftResources.FileResource { .init(name: "SF Pro Display Regular", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Display Semibold.otf`.
    var sfProDisplaySemiboldOtf: RswiftResources.FileResource { .init(name: "SF Pro Display Semibold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Rounded Bold.otf`.
    var sfProRoundedBoldOtf: RswiftResources.FileResource { .init(name: "SF Pro Rounded Bold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Rounded Heavy.otf`.
    var sfProRoundedHeavyOtf: RswiftResources.FileResource { .init(name: "SF Pro Rounded Heavy", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Rounded Medium.otf`.
    var sfProRoundedMediumOtf: RswiftResources.FileResource { .init(name: "SF Pro Rounded Medium", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Rounded Regular.otf`.
    var sfProRoundedRegularOtf: RswiftResources.FileResource { .init(name: "SF Pro Rounded Regular", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Rounded Semibold.otf`.
    var sfProRoundedSemiboldOtf: RswiftResources.FileResource { .init(name: "SF Pro Rounded Semibold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Text Black.otf`.
    var sfProTextBlackOtf: RswiftResources.FileResource { .init(name: "SF Pro Text Black", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Text Bold.otf`.
    var sfProTextBoldOtf: RswiftResources.FileResource { .init(name: "SF Pro Text Bold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Text Heavy.otf`.
    var sfProTextHeavyOtf: RswiftResources.FileResource { .init(name: "SF Pro Text Heavy", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Text Medium.otf`.
    var sfProTextMediumOtf: RswiftResources.FileResource { .init(name: "SF Pro Text Medium", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Text Regular.otf`.
    var sfProTextRegularOtf: RswiftResources.FileResource { .init(name: "SF Pro Text Regular", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF Pro Text Semibold.otf`.
    var sfProTextSemiboldOtf: RswiftResources.FileResource { .init(name: "SF Pro Text Semibold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF-Compact-Display-Medium.otf`.
    var sfCompactDisplayMediumOtf: RswiftResources.FileResource { .init(name: "SF-Compact-Display-Medium", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SF-Compact-Display-Semibold.otf`.
    var sfCompactDisplaySemiboldOtf: RswiftResources.FileResource { .init(name: "SF-Compact-Display-Semibold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}